<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.spring.project.admin.dao.AdminDAO">

	<!-- 학생 가입처리  delStatus, authority 는 하드코딩-->
	<insert id="insertUsers" parameterType="com.spring.project.admin.vo.AdStdVO">
		insert into users(userNumber, userPassword, userEngName, userName, userImage, userSsn,userCellNum,
							userEmail, delStatus, authority, gender, userZipCode, userAddr1, userAddr2 ) 
					values(#{userNumber},1234,#{userEngName},#{userName},#{userImage},
						#{userSsn},#{userCellNum},#{userEmail},0,'ROLE_STUDENT', #{gender}
						, #{userZipCode}, #{userAddr1}, #{userAddr2})
	</insert> 
	
	<!-- 학생 가입처리  -->
	<insert id="insertMajor" parameterType="com.spring.project.admin.vo.AdStdVO">
		insert into major(majorNum, majorName) values(#{majorNum},#{majorName})
	</insert>
	
	<!-- 학생 가입처리  stdNumber는 userNumber = 학번  //학년은 한자리숫자-->
	<insert id="insertStudent" parameterType="com.spring.project.admin.vo.AdStdVO">
		insert into student(stdNumber,grade, adDate, graDate, majorNum) 
					values(#{userNumber},#{grade},#{adDate},#{graDate}, #{majorNum})
	</insert>
	
	<!-- 학생 가입처리  -->
	<insert id="insertStudentState" parameterType="com.spring.project.admin.vo.AdStdVO">
		insert into studentState(stdNumber, semester, graduation_state) 
					values(#{userNumber},#{grade},0)
	</insert>
	
	<!-- 학생 가입처리 //schoolLeaveStateCode 휴복학 내역코드-pk /leaveStatus 넘버1자리-->
	<insert id="insertSchoolLeave" parameterType="com.spring.project.admin.vo.AdStdVO">
		insert into schoolLeave(schoolLeaveStateCode, leaveStatus, stdNumber) values(1,#{leaveStatus},#{userNumber})
	</insert>
	
	<!-- 학생리스트 -->
	<select id="getStdList" parameterType="java.util.Map" resultType="com.spring.project.admin.vo.AdStdVO">
		select u.userNumber,  u.userName, m.majorName, m.majorNum, 
      		 u.userCellNum ,  s.grade , st.graduation_state, f.faculty 
		from student s, studentState st , users u, major m, faculty f
		where  u.userNumber= s.stdNumber
    			and s.stdNumber = st.stdNumber
    			and s.majorNum = m.majorNum
    			and f.faculty = m.faculty
    			and u.authority = 'ROLE_STUDENT'
	</select>
	
	<!-- 교수리스트 -->
	<select id="getProList" parameterType="java.util.Map" resultType="com.spring.project.admin.vo.AdProVO">
		select u.userNumber,  u.userName, m.majorName ,m.majorNum , 
      			 u.authority,  e.annualLevel, e.empHiredDate ,rd.totalPayment , f.faculty
		from employee e , users u, major m, payment p, registerDetail rd, faculty f
		where  u.userNumber= e.empnumber
   		 and  e.empnumber =  p.empnumber
   		 and e.majorNum = m.majorNum
   		 and f.faculty = m.faculty
   		 and p.paymentcode = rd.paymentcode
   		 and u.authority = 'ROLE_PROFESSOR'  
	</select>
	
	<!-- 단과대 + 학과 리스트 -->
	<select id="FandMList" parameterType="java.util.Map" resultType="com.spring.project.admin.vo.AdProVO">
		select * from major m, faculty f where f.faculty = m.faculty
	</select>
	
	<!-- 휴복학 리스트 -->
	<select id="getSchoolLeave" parameterType="java.util.Map" resultType="com.spring.project.admin.vo.AdStdVO">
		select sl.schoolLeaveStateCode, sl.kind, sl.leaveStart, sl.leaveEnd, u.userName, sl.leaveStatus
		from users u, schoolLeave sl
		where u.userNumber = sl.stdNumber
	</select>
	<!-- 장학 단 -->
	<!-- 장학단  -->
	<!-- 장학글 갯수 -->
	
	<select id="getArticleCnt" resultType="int">
 	
 	SELECT COUNT(*) as cnt FROM SCHOLARSHIP where delstatus = 0
 	
 	</select>
 	
 	<!-- 장학글 목록  -->
 	
 	<select id="getArticleList" parameterType="java.util.Map" resultType="com.spring.project.admin.vo.ScholarpkVO">
 	
 	<![CDATA[SELECT *  
				FROM (select SCHOLARPK,SCHOLARNAME,to_char(YEAR,'YYYY') as YEAR,SEMESTER,AMOUNT,ROWNUM rNum  
				            from ( 
				                    select * FROM SCHOLARSHIP   
				                    order by SCHOLARPK desc
				                    ) 
				                ) 
				                where rNum >= #{start} and rNum <= #{end}]]>
 	
 	</select>
 	
 	<!-- 장학글 추가 -->
 	
 	<insert id="insertjangjag" parameterType = "com.spring.project.admin.vo.ScholarpkVO">
 	
 	INSERT INTO SCHOLARSHIP(SCHOLARPK,SCHOLARNAME,YEAR,SEMESTER,AMOUNT,SCHOLARCONTENT)
	values(SCHOLARSHIP_SEQ.nextval,#{scholarname},#{year},#{semester},#{amount},#{scholarcontent})
 	
 	</insert>
 	
 	<!-- 장학글 상세 -->
 	<select id="getArticle" resultType="com.spring.project.admin.vo.ScholarpkVO">
 	
 	SELECT * FROM SCHOLARSHIP where scholarpk = #{scholarpk}
 	
 	</select>
 	
 	<!-- 장학글 삭제 -->
 	<update id="delete">
 	
 	UPDATE SCHOLARSHIP 
 	SET delstatus = 1
 	WHERE scholarpk in
 	<foreach item="scholarpk" collection="array" open="("
				separator="," close=")">
				#{scholarpk}
	</foreach>
 	
 	</update>
 	
 	<!-- 장학금 글 심사 -->
 	<select id="auditCnt" resultType="com.spring.project.admin.vo.auditVO">
 	
 	 select * from Evaluation where statCode=1
 	
 	</select>
 	
 	
 	<select id="getMajors" parameterType="java.util.Map" resultType="com.spring.project.share.vo.Major">
 		<!-- SELECT * FROM major where faculty = #{faculty} -->
 		<![CDATA[
 		SELECT * FROM major where  faculty = #{faculty}
 		and delStatus <> 1
 		ORDER BY majorNum ASC
 		]]>
 	</select>
 	
 	<update id="deleteMajor" parameterType="java.util.Map">
 		UPDATE major SET
	    delStatus = 1
	    WHERE majorNum = #{majorNum}
 	</update>
</mapper>