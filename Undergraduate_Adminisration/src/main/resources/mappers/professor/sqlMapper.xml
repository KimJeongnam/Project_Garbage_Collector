<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.spring.project.professor.dao.ProfesserDAO">


	<!-- 마이페이지 -->
	<select id="myPage" parameterType="String" resultType="com.spring.project.professor.vo.MyPageVO">
 		SELECT * FROM users u JOIN employee e ON u.usernumber = e.empnumber WHERE u.userNumber=#{userNumber}
 	</select>
 	 
 	 
 	<!-- 프로필 이미지 변경 -->
	<update id="imageUpload" parameterType="com.spring.project.professor.vo.MyPageVO">
 		UPDATE users SET userImage=#{userImage} WHERE userNumber=#{userNumber}
 	</update>
 	
 	<!-- 프로필 이미지 변경 -->
	<update id="introUpdate" parameterType="com.spring.project.professor.vo.MyPageVO">
 		UPDATE employee SET introduction=#{introduction} WHERE EMPNUMBER=#{userNumber}
 	</update>
 	
 	
 	<!-- 개인정보 변경1 -->	
 	<update id="update" parameterType="com.spring.project.professor.vo.MyPageVO">
		UPDATE users SET USERNAME=#{userName}, USERENGNAME=#{userEngName}, USERPASSWORD=#{userPassword}, USERCELLNUM=#{userCellNum}, USEREMAIL=#{userEmail},USERADDR1=#{userAddr1},USERADDR2=#{userAddr2} WHERE USERNUMBER=#{userNumber}
 	</update> 
 	
 	<!-- 개인정보 변경2 -->	
 	<update id="update2" parameterType="com.spring.project.professor.vo.MyPageVO">
 		UPDATE employee SET accountNumber=#{accountNumber}, bankName=#{bankName} WHERE EMPNUMBER=#{userNumber}
 	</update> 
   
   	<!-- 내 강의 학생 조회 -->
	<select id="list" parameterType="java.util.Map" resultType="com.spring.project.professor.vo.StudentVO">
	SELECT * FROM myClassAllStudent WHERE empnumber = #{userNumber}
	</select>
	
   	<!-- 내 강의 목록 교수 강의 목록 -->
	<select id="myClass" parameterType="java.util.Map" resultType="com.spring.project.professor.vo.MyClassVO">
 	<![CDATA[SELECT lecturename FROM lecture WHERE lecstatus in (1,2) AND empnumber= #{userNumber} AND delstatus <> 1]]>
 	</select>
 	
   	<!-- 내 강의별 수강학생목록 -->
	<select id="getStudent" parameterType="java.util.Map" resultType="com.spring.project.professor.vo.ClassStudentVO">
 		SELECT * FROM myClassStudent WHERE lecturename =#{lecName} AND empnumber = #{userNumber}
 	</select>
 	
 	<!-- 학생검색 -->
	<select id="search_student" parameterType="java.util.Map" resultType="com.spring.project.professor.vo.SearchVO">
 		SELECT * FROM myClassStudent_search WHERE empnumber=#{userNumber} AND userName LIKE '%'||#{userName}||'%'
 	</select>
 	<!-- 수강생이 듣는 내 강의 목록 -->
	<select id="search_student_click" parameterType="java.util.Map" resultType="com.spring.project.professor.vo.SearchVO">
 		SELECT*FROM myClassStudent_search_lec WHERE empnumber=#{userNumber} AND username=#{stdName}
 	</select>
   
 	<!-- 내 강의 목록 교수 강의 목록 -->
	<select id="s_myClass" parameterType="String" resultType="com.spring.project.professor.vo.MyClassVO">
 		SELECT*FROM(SELECT ROWNUM num, lecturename FROM lecture WHERE empnumber=#{userNumber} AND lecstatus=TO_NUMBER(2))a WHERE a.num='1'
 	</select>
	<select id="v_myClass" parameterType="String" resultType="com.spring.project.professor.vo.MyClassVO">
 		SELECT*FROM(SELECT ROWNUM num, lecturename FROM lecture WHERE empnumber=#{userNumber} AND lecstatus=TO_NUMBER(2))a WHERE a.num!='1'
 	</select>
 	
 	<!-- 학점관리 진입 -->
	<select id="firstLec" parameterType="String" resultType="com.spring.project.professor.vo.LecScore">
 		SELECT*FROM myClassStudent_gpa WHERE empnumber = #{userNumber} AND lecturename = #{firstLec}
 	</select>
	<select id="getLecScore" parameterType="String" resultType="com.spring.project.professor.vo.LecScore">
 		SELECT*FROM myClassStudent_gpa WHERE empnumber = #{userNumber} AND lecturename = #{lecName}
 	</select>
 	
 	<!-- 학점입력 -->
 	<insert id="insertScore" parameterType="com.spring.project.professor.vo.LecScore">
 		INSERT INTO GPA(infoCode, credit, grade, jscore, semester)VALUES(#{incode}, #{credit}, #{grade}, #{jscore}, #{semester2})
 	</insert>
 	
 	<!-- 학점 수정 -->
	<update id="updateScore" parameterType="com.spring.project.professor.vo.LecScore">
 		UPDATE GPA SET credit=#{credit}, jscore =#{jscore} WHERE infoCode=#{incode}
 	</update>
 	
 	<!-- 강의계획서 강의목록 나누기 -->
	<select id="plan" parameterType="String" resultType="com.spring.project.professor.vo.PlanVO">
 		SELECT*FROM(SELECT ROWNUM num, lecturename FROM lecture WHERE empnumber=#{userNumber} AND lecstatus!=TO_NUMBER(3))a WHERE a.num='1'
 	</select>
	<select id="plan2" parameterType="String" resultType="com.spring.project.professor.vo.PlanVO">
 		SELECT*FROM(SELECT ROWNUM num, lecturename FROM lecture WHERE empnumber=#{userNumber} AND lecstatus!=TO_NUMBER(3))a WHERE a.num!='1'
 	</select>
 	
 	<!-- 강의계획서 진입 -->
 	<select id="firstPlan" parameterType="String" resultType="com.spring.project.professor.vo.PlanVO">
 		SELECT*FROM MyLecturePlan WHERE empnumber=#{userNumber} AND lecturename=#{firstLec}  ORDER BY week
 	</select>
	<select id="getPlan" parameterType="String" resultType="com.spring.project.professor.vo.PlanVO">
		SELECT*FROM MyLecturePlan WHERE empnumber=#{userNumber} AND lecturename=#{lecName}  ORDER BY week
 	</select>
 	
 	<!-- 강의계획서 입력 -->
 	<insert id="insertPlan" parameterType="com.spring.project.professor.vo.PlanVO">
 		INSERT INTO lectureplan(leccode, week, contents, text)VALUES(#{lecCode}, #{week}, #{contents}, #{text})
 	</insert>
 	<!-- 강의계획서 수정 -->
 	<update id="updatePlan" parameterType="com.spring.project.professor.vo.PlanVO">
 		UPDATE lectureplan SET contents=#{contents}, text=#{text} WHERE leccode=#{lecCode} AND week=#{week}
 	</update>
 	
 	<!--과제관리  -->
 	<select id="P_Lecture" parameterType="String" resultType="com.spring.project.professor.vo.LectureP_VO">
		select lectureName,leccode from lecture where empnumber = #{userNumber}
 	</select>
 	
 	<!-- 총수강인원 -->
 	<select id="personnel" resultType="int">
 	select count(*) from studentClassInfo where leccode = #{select}
 	</select>
 	
 	<!-- 과제 여부 -->
 	<select id="p_report" resultType="int">
 	select count(*)  from report_tbl where leccode = #{select}
 	</select>
 	
 	<!-- 과제 제출 인원 -->
 	<select id="codeCnt" resultType="int">
 	select count(*) from (
	select rs.reportcode, rs.stdnumber from report_submit_tbl rs,report_tbl r 
	where r.reportcode = rs.reportcode and rs.reportcode= #{reportcode}
	group by rs.reportcode, rs.stdnumber)
 	</select>
 	
 	<!-- 과제 추가 -->
 	<insert id="re_contentform" parameterType="com.spring.project.professor.vo.Report_tblVO">
 	INSERT INTO report_tbl 
	VALUES (REPORT_TBL_SEQ.nextval,#{lecCode},to_char(sysdate,'yyyy'),#{reportInfo},#{reportName},#{endDate})
	</insert>
	
	<!-- 과제 수정 -->
 	<update id="p_reportupdate" parameterType="com.spring.project.professor.vo.Report_tblVO">
 	UPDATE report_tbl SET reportname = #{reportName},enddate = #{endDate},reportinfo = #{reportInfo} WHERE reportcode = #{reportcode}
	</update>
	
	<!-- 과제 삭제 -->
 	<delete id="p_reportdelete" parameterType="com.spring.project.professor.vo.Report_tblVO">
 	 delete report_tbl where reportcode=#{reportcode}
	</delete>
	
	<!-- 과제 첫번째 -->
 	<select id="re_submit" parameterType="String" resultType="com.spring.project.professor.vo.Report_tblVO">
 	SELECT * from report_tbl where leccode=#{select} and rownum=1
 	</select>
 	
	
	<!-- 과제 리스트 -->
 	<select id="task_lookup" parameterType="String" resultType="com.spring.project.professor.vo.Report_tblVO">
 	select * from report_tbl where leccode = #{select}
 	</select>
 	
 	<!-- 과제 제출 리스트 -->
 	<select id="submissionlist" parameterType="int" resultType="com.spring.project.professor.vo.Submission_ListVO">
 	select * from SubmissionList where reportcode = #{reportcode}
 	</select>
 	
 	
 	
</mapper>