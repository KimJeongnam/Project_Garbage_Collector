<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.spring.project.student.dao.StudentDAO">
	<!-- 수강신청 목록 갯수 구하기 -->
	<select id="getLectureCnt" parameterType="java.util.Map"
		resultType="int">
		select count(*) from
		(SELECT rownum rNum, accountHolder, lecCode,
		majorName, lectureName, lectureClassfication, maximumcapacity, grade
		,
		grantedSemester, lectureScore, classRoom, classTime
		from
		(SELECT
		e.accountHolder, l.lecCode,m.majorName,l.lectureName,
		l.lectureClassfication, (l.maximumcapacity-(select count(*) from
		studentClassInfo where lecCode=l.lecCode))
		as maximumcapacity, l.grade,
		l.grantedSemester, l.lectureScore,
		l.classRoom, LISTAGG(to_char(t.lectureDay)||t.classTime, ',')within
		group(order by t.classTime) as classTime
		FROM employee e , lecture l,
		lectureTime lt, timetable t, major m
		<where>
			e.empNumber = l.empNumber and l.lecCode = lt.lecCode and
			lt.timetblCode = t.timetblCode and m.majorNum=l.majorNum
			<if test="keyword != null">
				AND LOWER(l.lectureName) like '%'||LOWER(#{keyword})||'%'
			</if>
			<if test="major != null">
				AND m.majorName like '%'||#{major}||'%'
			</if>
			<if test="classification != null">
				AND l.lectureClassfication like
				'%'||#{classification}||'%'
			</if>
			<if test="grade != null">
				AND l.grade like '%'||#{grade}||'%'
			</if>
		</where>
		GROUP BY e.accountHolder, l.lecCode,m.majorName,l.lectureName,
		l.lectureClassfication, maximumcapacity,l.grade,
		l.grantedSemester, l.lectureScore, l.classRoom
		)
		)
	</select>

	<!-- 수강신청 목록 조회 -->
	<select id="lectureList" parameterType="java.util.Map"
		resultType="com.spring.project.student.vo.LectureVO">

		select * from
		(SELECT rownum rNum, accountHolder, lecCode, majorName,
		lectureName, lectureClassfication, maximumcapacity, grade
		,
		grantedSemester, lectureScore, classRoom, classTime
		from
		(SELECT
		e.accountHolder, l.lecCode,m.majorName,l.lectureName,
		l.lectureClassfication, (l.maximumcapacity-(select count(*) from
		studentClassInfo where lecCode=l.lecCode)) as maximumcapacity,l.grade,
		l.grantedSemester, l.lectureScore, l.classRoom,
		LISTAGG(to_char(t.lectureDay)||t.classTime, ',')within group(order by
		t.classTime) as classTime
		FROM employee e , lecture l, lectureTime lt,
		timetable t, major m
		<where>
			e.empNumber = l.empNumber and l.lecCode = lt.lecCode and
			lt.timetblCode = t.timetblCode and m.majorNum=l.majorNum
			<if test="keyword != null">
				AND LOWER(l.lectureName) like '%'||LOWER(#{keyword})||'%'
			</if>
			<if test="major != null">
				AND m.majorName like '%'||#{major}||'%'
			</if>
			<if test="classification != null">
				AND l.lectureClassfication like
				'%'||#{classification}||'%'
			</if>
			<if test="grade != null">
				AND l.grade like '%'||#{grade}||'%'
			</if>
		</where>
		GROUP BY e.accountHolder, l.lecCode,m.majorName,l.lectureName,
		l.lectureClassfication, maximumcapacity,l.grade,
		l.grantedSemester, l.lectureScore, l.classRoom
		)
		)
		<where>
			<![CDATA[
			rNum >= #{start} and rNum <= #{end}
			]]>
		</where>
	</select>

	<!-- 시간표 조회 -->
	<select id="schoolTimeTable" parameterType="String"
		resultType="com.spring.project.student.vo.LectureVO">
		select * from timetableview where userNumber =
		#{userNumber}
	</select>

	<!-- 시간표 Hover -->
	<select id="lectureHover" parameterType="java.util.Map"
		resultType="com.spring.project.student.vo.LectureVO">
		select * from lectureHover where userNumber = #{userNumber}
		and lecCode = #{lecCode}
	</select>

	<!-- 강의 체크 -->
	<select id="checkLecture" parameterType="java.util.Map"
		resultType="int">
		select count(*) from timetableview
		where timetblCode in
		(SELECT timetblCode
		from timetableview
		where lecCode=#{lecCode} and
		userNumber=#{userNumber})
	</select>
	<!-- 강의 인원수 체크 -->
	<select id="checkStudentInLecture" parameterType="String"
		resultType="int">
		select count(*) from studentClassInfo where
		lecCode=#{lecCode}
	</select>


	<!-- 강의 인원수 체크 -->
	<select id="checkStudentInLecture2"
		parameterType="java.util.Map" resultType="int">
		<![CDATA[
		select count(*) from lecture where maximumCapacity>=#{selectCnt} and lecCode=#{lecCode}
		]]>
	</select>


	<!-- 강의 신청 -->
	<insert id="applyLecture" parameterType="java.util.Map">
		insert into
		studentClassInfo(infoCode, lecCode, userNumber, status)
		values(STUDENTCLASSINFO_SEQ.nextval,#{lecCode},#{userNumber},1)
	</insert>

	<!-- 장학글 갯수 -->

	<select id="getArticleCnt" resultType="int">

		SELECT COUNT(*) as cnt FROM SCHOLARSHIP
		<where>
			<if test="year != 0">
				to_char(year,'yyyy') like #{year}
				<if test="smester != 0">
					and semester like #{smester}
				</if>
			</if>
		</where>

	</select>

	<!-- 장학글 목록 -->

	<select id="getArticleList" parameterType="java.util.Map"
		resultType="com.spring.project.admin.vo.ScholarpkVO">

		SELECT *
		FROM (select SCHOLARPK,SCHOLARNAME,to_char(YEAR,'YYYY') as
		YEAR,SEMESTER,AMOUNT,ROWNUM rNum
		from (
		select * FROM SCHOLARSHIP
		order by SCHOLARPK desc
		)

		<where>
			<if test="year != 0">
				to_char(year,'yyyy') = #{year}
				<if test="smester != 0">
					and semester like #{smester}
				</if>
			</if>

		</where>
		)
				                 
				                
				               <![CDATA[ where rNum >= #{start} and rNum <= #{end}]]>

	</select>

	<!-- 장학글 상세 -->
	<select id="getArticle"
		resultType="com.spring.project.admin.vo.ScholarpkVO">

		SELECT * FROM SCHOLARSHIP where scholarpk = #{scholarpk}

	</select>

	<!-- 장학금 중복 신청 검사 -->
	<select id="scholarpk" resultType="int">

		SELECT count(*) FROM
		SCHOLARSHIPINFO where stdNumber = #{userNumber} and
		scholarpk =
		#{scholarpk}

	</select>

	<!-- 장학금 신청 -->
	<insert id="scholarshipinsert" parameterType="java.util.Map">
		insert into
		SCHOLARSHIPINFO(SCHINFOPK,SCHOLARPK,STDNUMBER,STATCODE)
		values(SCHOLARSHIPINFO_SEQ.nextval,#{scholarpk},#{userNumber},0)
	</insert>

	<!-- 내 수강신청 목록 조회 -->
	<select id="studentMyLecture" parameterType="String"
		resultType="com.spring.project.student.vo.LectureVO">
		select * from mylectureview where userNumber =
		#{userNumber}
	</select>

	<delete id="cancelLecture" parameterType="java.util.Map">
		delete from
		studentClassInfo where lecCode = #{lecCode} and
		userNumber=#{userNumber}
	</delete>

	<!-- 강의 목록 조회(전공) -->
	<select id="getMajor"
		resultType="com.spring.project.student.vo.LectureVO">
		select majorName from major group by majorName order by
		majorName
	</select>

	<!-- 내 학점 조회 -->
	<select id="GPA"
		resultType="com.spring.project.student.vo.GpaVO">
		select * from studentGPAview
	</select>

	<!-- 신청 학점 -->
	<select id="ApplyCredit" parameterType="String" resultType="int">
		select sum(lectureScore) as ApplyCredit from mylectureview where
		userNumber = #{userNumber}
	</select>
</mapper>