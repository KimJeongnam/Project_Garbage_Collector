<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.spring.project.restful.dao.RestfulDAO">
	<select id="getMessages" parameterType="java.util.Map" resultType="com.spring.project.restful.vo.Message">
		SELECT * FROM getmessage_view
    	<where> 
			userNumber = #{userNumber}
			<if test="readStatus != null">
			AND readstatus = #{readStatus}
			</if>
		</where>
	</select>
	
	<update id="messageReadSet" parameterType="java.util.Map">
	UPDATE messages SET readstatus = 1
    WHERE messagecode = #{messageCode}
	</update>

	<select id="getMessage" parameterType="java.util.Map" resultType="com.spring.project.restful.vo.Message">
		SELECT * FROM getmessage_view
		<where> 
			messageCode = #{messageCode}
			<if test="readStatus != null">
			AND readstatus = #{readStatus}
			</if>
		</where>
	</select>
	
	<insert id="sendMessage" parameterType="java.util.Map">
	INSERT INTO messages
    VALUES(
    messages_seq.nextval,
    #{recvUser}
    , #{sendUser}
    , #{message}
    , 0
    , localtimestamp
    , #{notify})
	</insert>
	
	
	
	<!-- ================================================ANDROID=START=============================================== -->
	
	<sql id="selectLecTime">
		select * from lecturetime_view
	</sql>
	
	<sql id="selectStdLec">
		SELECT * FROM stdlecture
	</sql>
	
	<resultMap type="com.spring.project.student.vo.LectureVO"
		id="lectureMap">
		<id property="lecCode" column="leccode" />
		<result property="day" column="day"/>
		<collection property="lectureTimes" column="{leccode=leccode,day=day}"
			select="getLectureTime"></collection>
	</resultMap>

	<select id="getLectureTime"
		resultType="com.spring.project.admin.vo.LectureTime">
		<include refid="selectLecTime"/>
		<where>
			lecCode = #{leccode}
			<if test="day != null">
			AND TRUNC(timetblcode/10, 0) = #{day}
			</if>
		</where>
		ORDER BY timetblcode
	</select>
	
	<select id="getStdLectureTime_test" parameterType="com.spring.project.student.vo.LectureVO" resultMap="lectureMap">
		SELECT #{day} as day, r.*
		FROM(
		<include refid="selectStdLec"/>
		<where>
			userNumber = #{userNumber}
		</where>
		) r
	</select>
	
	<select id="getStdLectureTime" parameterType="com.spring.project.student.vo.LectureVO" resultType="com.spring.project.restful.vo.StdLecTime">
	select * from stdlecturetime
    where usernumber = #{userNumber}
    AND TRUNC(timetblcode/10, 0) = #{day}
	</select>
	
	
	
	<select id="getUser" resultType="com.spring.project.restful.vo.RestUser">
	SELECT u.userNumber, u.userPassword, u.userName, u.userImage, u.gender, u.userCellNum
     , std.grade, std.adDate, std.graDate, m.faculty, m.majorName, u.delStatus
     FROM users u JOIN student std
     ON u.userNumber = std.stdNumber
     JOIN major m
     ON std.majorNum = m.majorNum
     WHERE u.userNumber = #{userNumber}
	</select>
	
	<select id="getLocation" resultType="com.spring.project.restful.vo.Location">
	SELECT area, locality, thoroughfare, x, y
    FROM
    (SELECT ROWNUM rnum, area, locality, thoroughfare, x, y 
        FROM locations 
        where area like '%'||#{area}||'%'
        AND locality like '%'||#{locality}||'%'
        AND thoroughfare like '%'||#{thoroughfare}||'%')
    WHERE rnum = 1
	</select>
	
	<select id="getReports" parameterType="java.util.Map" resultType="com.spring.project.restful.vo.StdReport">
	select r.leccode, r.lecturename, r.classroom
    ,r.empname, r.usernumber, r.reportname
    , r.reportinfo, r.enddate-trunc(sysdate) as day
    , ROUND((r.enddate-sysdate)*24) as hour
    , ROUND((r.enddate-sysdate)*24*60) as min
    , ROUND((r.enddate-sysdate)*24*60*60) as sec from stdreportlist r
    WHERE userNumber = #{stdNumber}
	</select>
	<!-- ================================================ANDROID=END=============================================== -->
	
</mapper>